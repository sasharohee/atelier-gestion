-- Script pour corriger l'isolation des donn√©es dans la table clients
-- Ce script configure les politiques RLS pour assurer l'isolation des donn√©es par utilisateur

-- 1. V√©rifier l'√©tat actuel de RLS
SELECT 
    '√âTAT RLS ACTUEL' as section,
    schemaname,
    tablename,
    rowsecurity as rls_active
FROM pg_tables 
WHERE tablename = 'clients' 
AND schemaname = 'public';

-- 2. Activer RLS sur la table clients si ce n'est pas d√©j√† fait
ALTER TABLE clients ENABLE ROW LEVEL SECURITY;

-- 3. Supprimer les anciennes politiques s'il y en a
DROP POLICY IF EXISTS clients_isolation_policy ON clients;
DROP POLICY IF EXISTS clients_select_policy ON clients;
DROP POLICY IF EXISTS clients_insert_policy ON clients;
DROP POLICY IF EXISTS clients_update_policy ON clients;
DROP POLICY IF EXISTS clients_delete_policy ON clients;

-- 4. Cr√©er les nouvelles politiques d'isolation

-- Politique pour la s√©lection (SELECT)
CREATE POLICY clients_select_policy ON clients
    FOR SELECT
    USING (
        -- Permettre l'acc√®s aux clients de l'utilisateur connect√©
        (auth.uid() = user_id)
        OR
        -- Permettre l'acc√®s aux clients syst√®me (user_id NULL ou utilisateur syst√®me)
        (user_id IS NULL OR user_id = '00000000-0000-0000-0000-000000000000'::uuid)
        OR
        -- Permettre l'acc√®s si aucun utilisateur connect√© (pour les tests)
        (auth.uid() IS NULL)
    );

-- Politique pour l'insertion (INSERT)
CREATE POLICY clients_insert_policy ON clients
    FOR INSERT
    WITH CHECK (
        -- Permettre l'insertion pour l'utilisateur connect√©
        (auth.uid() = user_id)
        OR
        -- Permettre l'insertion pour les clients syst√®me
        (user_id IS NULL OR user_id = '00000000-0000-0000-0000-000000000000'::uuid)
        OR
        -- Permettre l'insertion si aucun utilisateur connect√©
        (auth.uid() IS NULL)
    );

-- Politique pour la mise √† jour (UPDATE)
CREATE POLICY clients_update_policy ON clients
    FOR UPDATE
    USING (
        -- Permettre la mise √† jour des clients de l'utilisateur connect√©
        (auth.uid() = user_id)
        OR
        -- Permettre la mise √† jour des clients syst√®me
        (user_id IS NULL OR user_id = '00000000-0000-0000-0000-000000000000'::uuid)
        OR
        -- Permettre la mise √† jour si aucun utilisateur connect√©
        (auth.uid() IS NULL)
    )
    WITH CHECK (
        -- V√©rifier que l'utilisateur ne peut modifier que ses propres clients
        (auth.uid() = user_id)
        OR
        -- Permettre la modification des clients syst√®me
        (user_id IS NULL OR user_id = '00000000-0000-0000-0000-000000000000'::uuid)
        OR
        -- Permettre la modification si aucun utilisateur connect√©
        (auth.uid() IS NULL)
    );

-- Politique pour la suppression (DELETE)
CREATE POLICY clients_delete_policy ON clients
    FOR DELETE
    USING (
        -- Permettre la suppression des clients de l'utilisateur connect√©
        (auth.uid() = user_id)
        OR
        -- Permettre la suppression des clients syst√®me
        (user_id IS NULL OR user_id = '00000000-0000-0000-0000-000000000000'::uuid)
        OR
        -- Permettre la suppression si aucun utilisateur connect√©
        (auth.uid() IS NULL)
    );

-- 5. V√©rifier les politiques cr√©√©es
SELECT 
    'POLITIQUES CR√â√âES' as section,
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd,
    qual,
    with_check
FROM pg_policies 
WHERE tablename = 'clients' 
AND schemaname = 'public';

-- 6. V√©rifier que tous les clients ont un user_id
SELECT 
    'V√âRIFICATION USER_ID' as section,
    COUNT(*) as total_clients,
    COUNT(CASE WHEN user_id IS NULL THEN 1 END) as clients_sans_user_id,
    COUNT(CASE WHEN user_id = '00000000-0000-0000-0000-000000000000'::uuid THEN 1 END) as clients_systeme,
    COUNT(CASE WHEN user_id IS NOT NULL AND user_id != '00000000-0000-0000-0000-000000000000'::uuid THEN 1 END) as clients_utilisateur
FROM clients;

-- 7. Corriger les clients sans user_id
UPDATE clients 
SET user_id = '00000000-0000-0000-0000-000000000000'::uuid
WHERE user_id IS NULL;

-- 8. V√©rifier la correction
SELECT 
    'CORRECTION USER_ID' as section,
    COUNT(*) as total_clients,
    COUNT(CASE WHEN user_id IS NULL THEN 1 END) as clients_sans_user_id,
    COUNT(CASE WHEN user_id = '00000000-0000-0000-0000-000000000000'::uuid THEN 1 END) as clients_systeme,
    COUNT(CASE WHEN user_id IS NOT NULL AND user_id != '00000000-0000-0000-0000-000000000000'::uuid THEN 1 END) as clients_utilisateur
FROM clients;

-- 9. Test d'acc√®s pour l'utilisateur connect√©
DO $$
DECLARE
    current_user_id UUID;
    clients_count INTEGER;
BEGIN
    -- R√©cup√©rer l'utilisateur connect√©
    SELECT auth.uid() INTO current_user_id;
    
    RAISE NOTICE 'üîç Test d''isolation des donn√©es:';
    RAISE NOTICE '   - Utilisateur connect√©: %', current_user_id;
    
    -- Compter les clients accessibles
    SELECT COUNT(*) INTO clients_count
    FROM clients;
    
    RAISE NOTICE '   - Clients accessibles: %', clients_count;
    
    -- V√©rifier les clients de l'utilisateur
    SELECT COUNT(*) INTO clients_count
    FROM clients
    WHERE user_id = current_user_id;
    
    RAISE NOTICE '   - Clients de l''utilisateur: %', clients_count;
    
    -- V√©rifier les clients syst√®me
    SELECT COUNT(*) INTO clients_count
    FROM clients
    WHERE user_id = '00000000-0000-0000-0000-000000000000'::uuid;
    
    RAISE NOTICE '   - Clients syst√®me: %', clients_count;
    
    RAISE NOTICE '‚úÖ Isolation des donn√©es configur√©e avec succ√®s!';
END $$;

-- 10. V√©rifier les permissions
SELECT 
    'PERMISSIONS' as section,
    grantee,
    privilege_type,
    is_grantable
FROM information_schema.role_table_grants 
WHERE table_name = 'clients' 
AND table_schema = 'public';

-- 11. Message de confirmation
DO $$
BEGIN
    RAISE NOTICE 'üéâ Isolation des donn√©es corrig√©e!';
    RAISE NOTICE '‚úÖ RLS activ√© sur la table clients';
    RAISE NOTICE '‚úÖ Politiques d''isolation cr√©√©es';
    RAISE NOTICE '‚úÖ Tous les clients ont un user_id';
    RAISE NOTICE 'üí° Les utilisateurs ne peuvent voir que leurs propres clients';
    RAISE NOTICE 'üí° Les clients syst√®me sont accessibles √† tous';
END $$;
