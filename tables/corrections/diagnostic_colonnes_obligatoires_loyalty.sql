-- Diagnostic des colonnes obligatoires de la table loyalty_points_history
-- Ce script identifie toutes les colonnes NOT NULL pour √©viter les erreurs de contrainte

-- 1. V√âRIFIER LA STRUCTURE COMPL√àTE DE LA TABLE
SELECT 'üîç STRUCTURE COMPL√àTE DE LOYALTY_POINTS_HISTORY:' as info;

SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default,
    CASE 
        WHEN is_nullable = 'NO' THEN '‚ö†Ô∏è OBLIGATOIRE'
        ELSE '‚úÖ OPTIONNEL'
    END as statut
FROM information_schema.columns 
WHERE table_name = 'loyalty_points_history' 
AND table_schema = 'public'
ORDER BY ordinal_position;

-- 2. IDENTIFIER LES COLONNES OBLIGATOIRES SANS VALEUR PAR D√âFAUT
SELECT '‚ö†Ô∏è COLONNES OBLIGATOIRES SANS VALEUR PAR D√âFAUT:' as info;

SELECT 
    column_name,
    data_type,
    'Colonne obligatoire sans valeur par d√©faut' as probleme
FROM information_schema.columns 
WHERE table_name = 'loyalty_points_history' 
AND table_schema = 'public'
AND is_nullable = 'NO'
AND column_default IS NULL
ORDER BY column_name;

-- 3. V√âRIFIER LES COLONNES MANQUANTES DANS NOS FONCTIONS
SELECT 'üîß COLONNES √Ä INCLURE DANS LES FONCTIONS:' as info;

SELECT 
    column_name,
    data_type,
    CASE 
        WHEN column_name IN ('id', 'created_at') THEN 'G√©n√©r√© automatiquement'
        WHEN column_name = 'client_id' THEN 'Param√®tre de fonction'
        WHEN column_name = 'points_change' THEN 'Calcul√© dans la fonction'
        WHEN column_name = 'points_before' THEN 'R√©cup√©r√© de la base'
        WHEN column_name = 'points_after' THEN 'Calcul√© dans la fonction'
        WHEN column_name = 'description' THEN 'Param√®tre de fonction'
        WHEN column_name = 'points_type' THEN 'Valeur fixe: manual/usage'
        WHEN column_name = 'source_type' THEN 'Valeur fixe: manual'
        ELSE '√Ä v√©rifier'
    END as traitement
FROM information_schema.columns 
WHERE table_name = 'loyalty_points_history' 
AND table_schema = 'public'
AND is_nullable = 'NO'
ORDER BY column_name;

-- 4. G√âN√âRER LA REQU√äTE INSERT CORRECTE
SELECT 'üìù REQU√äTE INSERT CORRECTE:' as info;

SELECT 
    'INSERT INTO loyalty_points_history (' ||
    string_agg(column_name, ', ' ORDER BY ordinal_position) ||
    ') VALUES (' ||
    string_agg(
        CASE 
            WHEN column_name = 'id' THEN 'gen_random_uuid()'
            WHEN column_name = 'client_id' THEN 'p_client_id'
            WHEN column_name = 'points_change' THEN 'p_points'
            WHEN column_name = 'points_before' THEN 'v_current_points'
            WHEN column_name = 'points_after' THEN 'v_new_points'
            WHEN column_name = 'description' THEN 'p_description'
            WHEN column_name = 'points_type' THEN '''manual'''
            WHEN column_name = 'source_type' THEN '''manual'''
            WHEN column_name = 'created_at' THEN 'NOW()'
            ELSE 'NULL'
        END, 
        ', ' ORDER BY ordinal_position
    ) ||
    ');' as requete_insert
FROM information_schema.columns 
WHERE table_name = 'loyalty_points_history' 
AND table_schema = 'public';

-- 5. V√âRIFIER LES CONTRAINTES DE LA TABLE
SELECT 'üîó CONTRAINTES DE LA TABLE:' as info;

SELECT 
    tc.constraint_name,
    tc.constraint_type,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints tc
JOIN information_schema.key_column_usage kcu 
    ON tc.constraint_name = kcu.constraint_name
LEFT JOIN information_schema.constraint_column_usage ccu 
    ON tc.constraint_name = ccu.constraint_name
WHERE tc.table_name = 'loyalty_points_history' 
AND tc.table_schema = 'public'
ORDER BY tc.constraint_type, kcu.column_name;

-- 6. RECOMMANDATIONS
SELECT 'üí° RECOMMANDATIONS:' as info;

SELECT '1. Ajouter toutes les colonnes NOT NULL dans les requ√™tes INSERT' as recommandation
UNION ALL
SELECT '2. Utiliser des valeurs par d√©faut appropri√©es pour les colonnes obligatoires'
UNION ALL
SELECT '3. Tester les fonctions avec des donn√©es r√©elles'
UNION ALL
SELECT '4. V√©rifier les contraintes de cl√© √©trang√®re';

SELECT '‚úÖ Diagnostic termin√© !' as result;
