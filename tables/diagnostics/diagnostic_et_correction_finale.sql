-- DIAGNOSTIC ET CORRECTION FINALE DU PROBL√àME DE CONTRAINTE
-- R√©sout d√©finitivement le probl√®me de foreign key

-- 1. DIAGNOSTIC DES CONTRAINTES
SELECT 'üîç DIAGNOSTIC DES CONTRAINTES' as diagnostic;

SELECT 
    tc.table_name,
    tc.constraint_name,
    tc.constraint_type,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints AS tc
JOIN information_schema.key_column_usage AS kcu
    ON tc.constraint_name = kcu.constraint_name
    AND tc.table_schema = kcu.table_schema
JOIN information_schema.constraint_column_usage AS ccu
    ON ccu.constraint_name = tc.constraint_name
    AND ccu.table_schema = tc.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY'
    AND tc.table_name = 'clients'
    AND kcu.column_name = 'current_tier_id';

-- 2. V√âRIFIER LES TABLES EXISTANTES
SELECT 'üèóÔ∏è TABLES EXISTANTES' as diagnostic;

SELECT 
    table_name,
    table_type
FROM information_schema.tables 
WHERE table_name LIKE '%loyalty%'
AND table_schema = 'public'
ORDER BY table_name;

-- 3. V√âRIFIER LE CONTENU DES TABLES
SELECT 'üìä CONTENU DES TABLES' as diagnostic;

-- V√©rifier loyalty_tiers (si elle existe)
SELECT 'loyalty_tiers (si existe):' as table_name;
SELECT COUNT(*) as count FROM information_schema.tables 
WHERE table_name = 'loyalty_tiers' AND table_schema = 'public';

-- V√©rifier loyalty_tiers_advanced
SELECT 'loyalty_tiers_advanced:' as table_name;
SELECT COUNT(*) as count FROM loyalty_tiers_advanced;

-- 4. SUPPRIMER TOUTES LES CONTRAINTES PROBL√âMATIQUES
SELECT 'üßπ SUPPRESSION DES CONTRAINTES' as diagnostic;

-- Supprimer toutes les contraintes possibles
ALTER TABLE clients DROP CONSTRAINT IF EXISTS clients_current_tier_id_fkey;
ALTER TABLE clients DROP CONSTRAINT IF EXISTS fk_clients_current_tier_id;
ALTER TABLE clients DROP CONSTRAINT IF EXISTS clients_loyalty_tier_fkey;

-- 5. V√âRIFIER QU'IL N'Y A PLUS DE CONTRAINTES
SELECT '‚úÖ V√âRIFICATION APR√àS SUPPRESSION' as diagnostic;

SELECT 
    tc.table_name,
    tc.constraint_name,
    tc.constraint_type,
    kcu.column_name
FROM information_schema.table_constraints AS tc
JOIN information_schema.key_column_usage AS kcu
    ON tc.constraint_name = kcu.constraint_name
    AND tc.table_schema = kcu.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY'
    AND tc.table_name = 'clients'
    AND kcu.column_name = 'current_tier_id';

-- 6. NETTOYER LES R√âF√âRENCES INCORRECTES
SELECT 'üßπ NETTOYAGE DES R√âF√âRENCES' as diagnostic;

UPDATE clients 
SET current_tier_id = NULL;

-- 7. CR√âER LA NOUVELLE CONTRAINTE CORRECTE
SELECT 'üîß CR√âATION DE LA NOUVELLE CONTRAINTE' as diagnostic;

ALTER TABLE clients 
ADD CONSTRAINT clients_current_tier_id_fkey 
FOREIGN KEY (current_tier_id) 
REFERENCES loyalty_tiers_advanced(id);

-- 8. ASSIGNER LES NIVEAUX
SELECT 'üîß ASSIGNATION DES NIVEAUX' as diagnostic;

UPDATE clients 
SET current_tier_id = (
    SELECT id 
    FROM loyalty_tiers_advanced 
    WHERE points_required <= clients.loyalty_points 
    AND is_active = true
    ORDER BY points_required DESC 
    LIMIT 1
)
WHERE loyalty_points > 0;

-- 9. V√âRIFICATION FINALE
SELECT '‚úÖ V√âRIFICATION FINALE' as diagnostic;

SELECT 
    c.id as client_id,
    c.first_name,
    c.last_name,
    c.loyalty_points,
    c.current_tier_id,
    lt.name as niveau_nom,
    lt.points_required,
    lt.discount_percentage
FROM clients c
LEFT JOIN loyalty_tiers_advanced lt ON c.current_tier_id = lt.id
WHERE c.loyalty_points > 0
ORDER BY c.loyalty_points DESC;

-- 10. V√âRIFIER LA NOUVELLE CONTRAINTE
SELECT 'üîó V√âRIFICATION DE LA NOUVELLE CONTRAINTE' as diagnostic;

SELECT 
    tc.table_name,
    tc.constraint_name,
    tc.constraint_type,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints AS tc
JOIN information_schema.key_column_usage AS kcu
    ON tc.constraint_name = kcu.constraint_name
    AND tc.table_schema = kcu.table_schema
JOIN information_schema.constraint_column_usage AS ccu
    ON ccu.constraint_name = tc.constraint_name
    AND ccu.table_schema = tc.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY'
    AND tc.table_name = 'clients'
    AND kcu.column_name = 'current_tier_id';

-- 11. MESSAGE DE CONFIRMATION
SELECT 'üéâ CORRECTION TERMIN√âE !' as result;
SELECT 'üìã La contrainte pointe maintenant vers loyalty_tiers_advanced.' as next_step;
SELECT 'üîÑ Rafra√Æchissez la page pour voir les changements.' as instruction;





