-- DIAGNOSTIC DES CLIENTS DE FID√âLIT√â
-- Script pour identifier pourquoi les clients ne s'affichent pas

-- 1. V√âRIFIER L'UTILISATEUR ACTUEL
SELECT 'üîç UTILISATEUR ACTUEL' as diagnostic;

SELECT 
    id,
    email,
    created_at
FROM auth.users 
ORDER BY created_at DESC 
LIMIT 5;

-- 2. V√âRIFIER LES CLIENTS ET LEUR WORKSHOP_ID
SELECT 'üìä CLIENTS ET WORKSHOP_ID' as diagnostic;

SELECT 
    id,
    first_name,
    last_name,
    email,
    loyalty_points,
    current_tier_id,
    workshop_id,
    created_at
FROM clients 
ORDER BY created_at DESC;

-- 3. V√âRIFIER LES CLIENTS SANS WORKSHOP_ID
SELECT '‚ö†Ô∏è CLIENTS SANS WORKSHOP_ID' as diagnostic;

SELECT 
    COUNT(*) as total_clients,
    COUNT(CASE WHEN workshop_id IS NULL THEN 1 END) as clients_sans_workshop_id,
    COUNT(CASE WHEN workshop_id IS NOT NULL THEN 1 END) as clients_avec_workshop_id
FROM clients;

-- 4. AFFICHER LES CLIENTS SANS WORKSHOP_ID
SELECT 'üìã CLIENTS SANS WORKSHOP_ID' as diagnostic;

SELECT 
    id,
    first_name,
    last_name,
    email,
    loyalty_points,
    current_tier_id,
    workshop_id
FROM clients 
WHERE workshop_id IS NULL
ORDER BY created_at DESC;

-- 5. V√âRIFIER LES NIVEAUX DE FID√âLIT√â
SELECT 'üèÜ NIVEAUX DE FID√âLIT√â' as diagnostic;

SELECT 
    id,
    name,
    points_required,
    workshop_id,
    is_active
FROM loyalty_tiers_advanced 
ORDER BY workshop_id, points_required;

-- 6. CORRECTION : ASSIGNER WORKSHOP_ID AUX CLIENTS
SELECT 'üîß CORRECTION DES CLIENTS' as diagnostic;

-- Assigner workshop_id aux clients qui n'en ont pas
UPDATE clients 
SET workshop_id = (
    SELECT u.id 
    FROM auth.users u 
    ORDER BY u.created_at DESC 
    LIMIT 1
)
WHERE workshop_id IS NULL;

-- 7. V√âRIFICATION APR√àS CORRECTION
SELECT '‚úÖ V√âRIFICATION APR√àS CORRECTION' as diagnostic;

SELECT 
    COUNT(*) as total_clients,
    COUNT(CASE WHEN workshop_id IS NULL THEN 1 END) as clients_sans_workshop_id,
    COUNT(CASE WHEN workshop_id IS NOT NULL THEN 1 END) as clients_avec_workshop_id
FROM clients;

-- 8. AFFICHER LES CLIENTS CORRIG√âS
SELECT 'üìä CLIENTS CORRIG√âS' as diagnostic;

SELECT 
    id,
    first_name,
    last_name,
    email,
    loyalty_points,
    current_tier_id,
    workshop_id
FROM clients 
ORDER BY loyalty_points DESC, created_at DESC;

-- 9. TEST DE REQU√äTE SIMUL√âE
SELECT 'üß™ TEST DE REQU√äTE' as diagnostic;

-- Simuler la requ√™te du frontend
SELECT 
    c.id,
    c.first_name,
    c.last_name,
    c.email,
    c.phone,
    c.loyalty_points,
    c.current_tier_id,
    c.workshop_id,
    lta.name as tier_name
FROM clients c
LEFT JOIN loyalty_tiers_advanced lta ON c.current_tier_id = lta.id
WHERE c.workshop_id = (
    SELECT u.id 
    FROM auth.users u 
    ORDER BY u.created_at DESC 
    LIMIT 1
)
ORDER BY c.loyalty_points DESC;

-- 10. MESSAGE DE CONFIRMATION
SELECT 'üéâ DIAGNOSTIC TERMIN√â !' as result;
SELECT 'üìã Les clients ont √©t√© corrig√©s.' as next_step;
SELECT 'üîÑ Rechargez la page de fid√©lit√© pour voir les clients.' as instruction;





