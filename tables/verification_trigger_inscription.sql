-- =====================================================
-- V√âRIFICATION TRIGGER INSCRIPTION
-- =====================================================
-- Source: dashboard
-- User: 84dbdd62-9341-4abb-aaa4-d263ae14784b
-- Date: 2025-08-25T14:50:00.000Z

-- Script pour v√©rifier si le trigger a √©t√© ex√©cut√© lors de l'inscription

-- =====================================================
-- √âTAPE 1: V√âRIFICATION DES DERNIERS UTILISATEURS
-- =====================================================

-- V√©rifier les utilisateurs r√©cents (derni√®res 24h)
SELECT 
  'Utilisateurs r√©cents (24h)' as info,
  u.id,
  u.email,
  u.created_at,
  CASE 
    WHEN ss.user_id IS NOT NULL THEN '‚úÖ Dans subscription_status'
    ELSE '‚ùå Manquant dans subscription_status'
  END as status
FROM auth.users u
LEFT JOIN subscription_status ss ON u.id = ss.user_id
WHERE u.created_at > NOW() - INTERVAL '24 hours'
ORDER BY u.created_at DESC;

-- =====================================================
-- √âTAPE 2: V√âRIFICATION DES UTILISATEURS MANQUANTS
-- =====================================================

-- Lister tous les utilisateurs qui ne sont pas dans subscription_status
SELECT 
  'Utilisateurs manquants dans subscription_status' as info,
  u.id,
  u.email,
  u.created_at,
  u.raw_user_meta_data
FROM auth.users u
WHERE NOT EXISTS (
  SELECT 1 FROM subscription_status ss WHERE ss.user_id = u.id
)
ORDER BY u.created_at DESC;

-- =====================================================
-- √âTAPE 3: V√âRIFICATION DU TRIGGER
-- =====================================================

-- V√©rifier si le trigger existe et est actif
SELECT 
  '√âtat du trigger' as info,
  trigger_name,
  event_manipulation,
  action_statement,
  trigger_schema,
  CASE 
    WHEN trigger_name IS NOT NULL THEN '‚úÖ Actif'
    ELSE '‚ùå Manquant'
  END as status
FROM information_schema.triggers 
WHERE trigger_name = 'on_auth_user_created';

-- V√©rifier si la fonction existe
SELECT 
  '√âtat de la fonction' as info,
  routine_name,
  routine_type,
  routine_schema,
  security_type,
  CASE 
    WHEN routine_name IS NOT NULL THEN '‚úÖ Existe'
    ELSE '‚ùå Manquante'
  END as status
FROM information_schema.routines 
WHERE routine_name = 'handle_new_user';

-- =====================================================
-- √âTAPE 4: TEST MANUEL DU TRIGGER
-- =====================================================

-- Cr√©er un utilisateur de test pour v√©rifier le trigger
DO $$
DECLARE
  test_user_id UUID := gen_random_uuid();
  test_email TEXT := 'test_verification_' || extract(epoch from now())::text || '@test.com';
BEGIN
  RAISE NOTICE 'üß™ Test du trigger pour: %', test_email;
  
  -- Ins√©rer un utilisateur de test
  INSERT INTO auth.users (
    id,
    email,
    encrypted_password,
    email_confirmed_at,
    created_at,
    updated_at,
    raw_user_meta_data
  ) VALUES (
    test_user_id,
    test_email,
    'test_password_hash',
    NOW(),
    NOW(),
    NOW(),
    '{"first_name": "Test", "last_name": "Verification"}'
  );
  
  RAISE NOTICE '‚úÖ Utilisateur de test cr√©√© dans auth.users';
  
  -- V√©rifier le r√©sultat
  IF EXISTS (SELECT 1 FROM subscription_status WHERE user_id = test_user_id) THEN
    RAISE NOTICE '‚úÖ SUCC√àS: L''utilisateur de test a √©t√© ajout√© automatiquement par le trigger';
  ELSE
    RAISE NOTICE '‚ùå √âCHEC: L''utilisateur de test n''a PAS √©t√© ajout√© par le trigger';
  END IF;
  
  -- Nettoyer
  DELETE FROM subscription_status WHERE user_id = test_user_id;
  DELETE FROM auth.users WHERE id = test_user_id;
  
  RAISE NOTICE 'üßπ Nettoyage termin√©';
  
END $$;

-- =====================================================
-- √âTAPE 5: V√âRIFICATION DES PERMISSIONS
-- =====================================================

-- V√©rifier les permissions sur subscription_status
SELECT 
  'Permissions subscription_status' as info,
  grantee,
  privilege_type,
  is_grantable
FROM information_schema.role_table_grants 
WHERE table_name = 'subscription_status' 
  AND table_schema = 'public'
  AND grantee IN ('authenticated', 'anon', 'service_role');

-- V√©rifier RLS
SELECT 
  'RLS subscription_status' as info,
  schemaname,
  tablename,
  rowsecurity,
  CASE 
    WHEN rowsecurity = false THEN '‚úÖ D√©sactiv√© (OK)'
    ELSE '‚ùå Activ√© (Probl√®me)'
  END as status
FROM pg_tables 
WHERE tablename = 'subscription_status';

-- =====================================================
-- √âTAPE 6: RAPPORT FINAL
-- =====================================================

SELECT 
  'V√©rification termin√©e' as info,
  'Voir les r√©sultats ci-dessus pour identifier le probl√®me' as message;
