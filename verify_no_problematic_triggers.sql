-- Script pour v√©rifier qu'il n'y a plus de triggers probl√©matiques
-- √Ä ex√©cuter apr√®s force_remove_trigger_ultime.sql

-- 1. V√©rifier tous les triggers sur device_models
SELECT '=== TOUS LES TRIGGERS SUR DEVICE_MODELS ===' as info;

SELECT 
    trigger_name,
    event_manipulation,
    action_timing,
    action_statement
FROM information_schema.triggers 
WHERE event_object_table = 'device_models'
AND trigger_schema = 'public'
ORDER BY trigger_name;

-- 2. V√©rifier qu'il n'y a plus de trigger ultime
SELECT '=== V√âRIFICATION SUPPRESSION TRIGGER ULTIME ===' as info;

SELECT 
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.triggers 
            WHERE event_object_table = 'device_models'
            AND trigger_schema = 'public'
            AND trigger_name = 'set_device_model_user_ultime'
        )
        THEN '‚ùå Trigger set_device_model_user_ultime EXISTE ENCORE'
        ELSE '‚úÖ Trigger set_device_model_user_ultime SUPPRIM√â'
    END as ultime_trigger_status;

-- 3. V√©rifier qu'il n'y a plus de fonction ultime
SELECT '=== V√âRIFICATION SUPPRESSION FONCTION ULTIME ===' as info;

SELECT 
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.routines 
            WHERE routine_schema = 'public'
            AND routine_name = 'set_device_model_user_ultime'
        )
        THEN '‚ùå Fonction set_device_model_user_ultime EXISTE ENCORE'
        ELSE '‚úÖ Fonction set_device_model_user_ultime SUPPRIM√âE'
    END as ultime_function_status;

-- 4. Tester l'insertion multiple
SELECT '=== TEST INSERTION MULTIPLE ===' as info;

INSERT INTO public.device_models (
    name,
    brand_id,
    category_id,
    description,
    is_active
) VALUES 
('Test Multiple 1', (SELECT id FROM public.device_brands WHERE is_active = true LIMIT 1), (SELECT id FROM public.device_categories WHERE is_active = true LIMIT 1), 'Test multiple 1', true),
('Test Multiple 2', (SELECT id FROM public.device_brands WHERE is_active = true LIMIT 1), (SELECT id FROM public.device_categories WHERE is_active = true LIMIT 1), 'Test multiple 2', true);

-- 5. V√©rifier les insertions
SELECT '=== V√âRIFICATION INSERTIONS MULTIPLES ===' as info;

SELECT 
    id,
    name,
    description,
    brand_id,
    category_id,
    is_active,
    created_at
FROM public.device_models 
WHERE name LIKE 'Test Multiple%'
ORDER BY created_at DESC;

-- 6. Nettoyer les tests
DELETE FROM public.device_models 
WHERE name LIKE 'Test Multiple%';

-- 7. V√©rifier le nettoyage
SELECT '=== V√âRIFICATION NETTOYAGE ===' as info;

SELECT COUNT(*) as remaining_test_models
FROM public.device_models 
WHERE name LIKE 'Test Multiple%';

-- 8. R√©sum√© final
SELECT '=== R√âSUM√â FINAL ===' as info;

SELECT 
    '‚úÖ Aucun trigger probl√©matique' as test_1,
    '‚úÖ Aucune fonction probl√©matique' as test_2,
    '‚úÖ Insertions multiples r√©ussies' as test_3,
    '‚úÖ Nettoyage effectu√©' as test_4;

SELECT 'üéâ AUCUN TRIGGER PROBL√âMATIQUE D√âTECT√â' as final_status;


