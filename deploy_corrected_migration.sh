#!/bin/bash

# Script de d√©ploiement pour la migration corrig√©e device_model_services
# R√©sout les probl√®mes de types entre les tables

echo "üöÄ D√©ploiement de la migration corrig√©e device_model_services"
echo ""

# V√©rifier que le fichier SQL existe
if [ ! -f "create_device_model_services_corrected.sql" ]; then
    echo "‚ùå Erreur: Le fichier create_device_model_services_corrected.sql n'existe pas"
    exit 1
fi

echo "üìã Instructions pour appliquer la migration corrig√©e:"
echo ""
echo "1. Connectez-vous √† votre dashboard Supabase:"
echo "   https://supabase.com/dashboard"
echo ""
echo "2. S√©lectionnez votre projet"
echo ""
echo "3. Allez dans l'√©diteur SQL (SQL Editor)"
echo ""
echo "4. Copiez le contenu du fichier 'create_device_model_services_corrected.sql'"
echo ""
echo "5. Collez-le dans l'√©diteur SQL"
echo ""
echo "6. Cliquez sur 'Run' pour ex√©cuter le script"
echo ""
echo "7. V√©rifiez que vous voyez les messages de succ√®s:"
echo "   ‚úÖ Table device_model_services existe"
echo "   ‚úÖ Vue device_model_services_detailed existe"
echo "   ‚úÖ Politiques RLS configur√©es"
echo ""
echo "‚úÖ Cette version corrige les probl√®mes de types:"
echo "   - Utilise TEXT pour brand_id et category_id (compatible avec device_models)"
echo "   - Utilise ::text pour les jointures avec device_brands et device_categories"
echo "   - √âvite les erreurs de type UUID vs TEXT"
echo ""
echo "üìÅ Fichier SQL √† utiliser: create_device_model_services_corrected.sql"
echo ""
echo "üîß Ce script fait tout automatiquement:"
echo "   - Diagnostique les types existants"
echo "   - Supprime l'ancienne table si elle existe"
echo "   - Cr√©e la table avec les bons types"
echo "   - Configure tous les index et contraintes"
echo "   - Cr√©e la vue avec conversion de types"
echo "   - Configure les politiques RLS"
echo "   - Cr√©e les fonctions RPC"
echo "   - Cr√©e le trigger updated_at"
echo "   - V√©rifie que tout fonctionne"
echo ""
echo "‚ö†Ô∏è  Pr√©requis: Les tables suivantes doivent exister:"
echo "   - device_models (avec brand_id et category_id de type TEXT)"
echo "   - services"
echo "   - device_brands (avec id de type UUID)"
echo "   - device_categories (avec id de type UUID)"
echo "   - workshops (optionnel)"
echo ""
echo "üéØ Une fois le script ex√©cut√©, l'application devrait fonctionner sans erreur 404"
echo ""
echo "üß™ Pour tester apr√®s l'ex√©cution:"
echo "   1. Rechargez votre application"
echo "   2. Essayez de cr√©er une association service-mod√®le"
echo "   3. V√©rifiez qu'il n'y a plus d'erreur 404 dans la console"
echo ""
echo "üîç Si vous voulez diagnostiquer les types avant:"
echo "   Ex√©cutez d'abord 'diagnose_table_types.sql' pour voir les types existants"
