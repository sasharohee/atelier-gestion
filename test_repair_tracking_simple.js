// Script de test simple pour diagnostiquer le probl√®me de suivi des r√©parations
// Ce script utilise les m√™mes variables d'environnement que l'application React

console.log('üîç Diagnostic de la fonctionnalit√© de suivi des r√©parations\n');

// V√©rifier si les variables d'environnement sont disponibles
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'Non d√©finie';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'Non d√©finie';

console.log('üìã Configuration actuelle:');
console.log('- VITE_SUPABASE_URL:', supabaseUrl);
console.log('- VITE_SUPABASE_ANON_KEY:', supabaseKey ? '‚úÖ D√©finie' : '‚ùå Non d√©finie');

if (supabaseUrl === 'Non d√©finie' || supabaseKey === 'Non d√©finie') {
  console.log('\n‚ùå Variables d\'environnement manquantes !');
  console.log('\nüìù Pour r√©soudre ce probl√®me :');
  console.log('1. Cr√©ez un fichier .env √† la racine du projet');
  console.log('2. Ajoutez vos variables Supabase :');
  console.log('   VITE_SUPABASE_URL=votre_url_supabase');
  console.log('   VITE_SUPABASE_ANON_KEY=votre_cle_anon_supabase');
  console.log('3. Red√©marrez le serveur de d√©veloppement');
  console.log('\nüí° Vous pouvez copier le fichier env.example et le renommer en .env');
  process.exit(1);
}

// Si les variables sont d√©finies, tester la connexion
console.log('\n‚úÖ Variables d\'environnement trouv√©es !');
console.log('\nüìã Prochaines √©tapes pour diagnostiquer :');
console.log('1. V√©rifiez que les scripts SQL ont √©t√© ex√©cut√©s dans Supabase :');
console.log('   - tables/add_repair_number.sql');
console.log('   - tables/repair_tracking_function.sql');
console.log('\n2. Testez la page de suivi dans l\'application :');
console.log('   - Allez sur http://localhost:3004/repair-tracking');
console.log('   - Cr√©ez une r√©paration dans le Kanban');
console.log('   - Utilisez le num√©ro de r√©paration pour tester');
console.log('\n3. V√©rifiez la console du navigateur pour les erreurs');
console.log('\n4. V√©rifiez les logs Supabase pour les erreurs SQL');

console.log('\nüîß Pour tester manuellement dans Supabase :');
console.log('1. Ouvrez l\'√©diteur SQL de votre projet Supabase');
console.log('2. Ex√©cutez cette requ√™te pour v√©rifier les r√©parations :');
console.log(`
SELECT 
  r.id,
  r.repair_number,
  r.status,
  c.email,
  c.first_name,
  c.last_name
FROM repairs r
JOIN clients c ON r.client_id = c.id
WHERE r.repair_number IS NOT NULL
ORDER BY r.created_at DESC
LIMIT 5;
`);

console.log('\n3. Testez la fonction de suivi :');
console.log(`
SELECT * FROM get_repair_tracking_info('REP-20241201-1234', 'email@test.com');
`);

console.log('\nüéØ Si le probl√®me persiste, v√©rifiez :');
console.log('- Que la colonne repair_number existe dans la table repairs');
console.log('- Que les fonctions SQL ont √©t√© cr√©√©es sans erreur');
console.log('- Que les donn√©es de test existent dans la base');
console.log('- Que les permissions Supabase permettent l\'acc√®s aux fonctions RPC');
