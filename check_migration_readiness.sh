#!/bin/bash

# Script de v√©rification avant l'ex√©cution des migrations
# V√©rifie que tout est pr√™t pour l'ex√©cution des migrations V13 √† V22

echo "üîç V√©rification de la pr√©paration aux migrations V13 √† V22"
echo ""

# V√©rifier la configuration Flyway
echo "üìã V√©rification de la configuration Flyway..."

if [ -f "flyway.prod.toml" ]; then
    echo "   ‚úÖ Configuration de production trouv√©e"
else
    echo "   ‚ùå Configuration de production manquante"
    exit 1
fi

if [ -f "flyway.toml" ]; then
    echo "   ‚úÖ Configuration principale trouv√©e"
else
    echo "   ‚ùå Configuration principale manquante"
    exit 1
fi

# V√©rifier le dossier migrations
echo ""
echo "üìÅ V√©rification du dossier migrations..."

if [ -d "migrations" ]; then
    echo "   ‚úÖ Dossier migrations trouv√©"
    migration_count=$(ls migrations/V*.sql 2>/dev/null | wc -l)
    echo "   üìä Nombre total de migrations: $migration_count"
else
    echo "   ‚ùå Dossier migrations manquant"
    exit 1
fi

# V√©rifier les migrations V13 √† V22 sp√©cifiquement
echo ""
echo "üéØ V√©rification des migrations V13 √† V22..."

missing_migrations=0
for i in {13..22}; do
    migration_file="migrations/V${i}__*.sql"
    if ls $migration_file 1> /dev/null 2>&1; then
        filename=$(ls $migration_file | head -1)
        echo "   ‚úÖ V${i}: $filename"
    else
        echo "   ‚ùå V${i}: Fichier manquant"
        missing_migrations=$((missing_migrations + 1))
    fi
done

if [ $missing_migrations -gt 0 ]; then
    echo ""
    echo "‚ùå $missing_migrations migration(s) manquante(s)"
    exit 1
fi

# V√©rifier Flyway CLI
echo ""
echo "üîß V√©rification de Flyway CLI..."

if command -v flyway &> /dev/null; then
    flyway_version=$(flyway -v 2>/dev/null | head -1)
    echo "   ‚úÖ Flyway CLI trouv√©: $flyway_version"
else
    echo "   ‚ö†Ô∏è  Flyway CLI non trouv√©"
    echo "      Vous pouvez utiliser Flyway Desktop √† la place"
fi

# V√©rifier la connectivit√© √† la base de donn√©es
echo ""
echo "üåê Test de connectivit√© √† la base de production..."

# Extraire les informations de connexion du fichier de configuration
db_url=$(grep 'url = ' flyway.prod.toml | sed 's/.*url = "//' | sed 's/"//')
db_user=$(grep 'user = ' flyway.prod.toml | sed 's/.*user = "//' | sed 's/"//')

if [ -n "$db_url" ] && [ -n "$db_user" ]; then
    echo "   üìä URL de base de donn√©es: $db_url"
    echo "   üë§ Utilisateur: $db_user"
    echo "   ‚úÖ Configuration de connexion trouv√©e"
else
    echo "   ‚ùå Impossible d'extraire les informations de connexion"
    exit 1
fi

# V√©rifier l'√©tat actuel de la base de donn√©es
echo ""
echo "üìä V√©rification de l'√©tat actuel de la base de donn√©es..."

if command -v flyway &> /dev/null; then
    echo "   üîç Ex√©cution de 'flyway info'..."
    flyway -configFiles=flyway.prod.toml info
    echo ""
    echo "   ‚úÖ √âtat de la base de donn√©es v√©rifi√©"
else
    echo "   ‚ö†Ô∏è  Impossible de v√©rifier l'√©tat (Flyway CLI non disponible)"
    echo "      Utilisez Flyway Desktop pour v√©rifier l'√©tat"
fi

# R√©sum√© final
echo ""
echo "üéØ R√âSUM√â DE LA V√âRIFICATION"
echo "================================"

if [ $missing_migrations -eq 0 ]; then
    echo "‚úÖ Toutes les migrations V13 √† V22 sont pr√©sentes"
else
    echo "‚ùå $missing_migrations migration(s) manquante(s)"
fi

echo "‚úÖ Configuration Flyway pr√™te"
echo "‚úÖ Dossier migrations trouv√©"

if command -v flyway &> /dev/null; then
    echo "‚úÖ Flyway CLI disponible"
    echo ""
    echo "üöÄ Vous pouvez maintenant ex√©cuter:"
    echo "   ./run_migrations_v13_to_v22.sh"
else
    echo "‚ö†Ô∏è  Flyway CLI non disponible"
    echo ""
    echo "üöÄ Vous pouvez utiliser Flyway Desktop ou installer Flyway CLI:"
    echo "   - Flyway Desktop: Ouvrez le projet et s√©lectionnez 'production'"
    echo "   - Flyway CLI: brew install flyway (sur macOS)"
fi

echo ""
echo "‚ö†Ô∏è  RAPPEL: Vous allez modifier la base de PRODUCTION"
echo "   Assurez-vous d'avoir une sauvegarde si n√©cessaire"
