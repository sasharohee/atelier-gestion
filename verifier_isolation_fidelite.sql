-- üîç V√âRIFICATION RAPIDE - Isolation Fid√©lit√©
-- Script pour v√©rifier rapidement que l'isolation fonctionne
-- Date: 2025-01-23

-- ============================================================================
-- 1. V√âRIFICATION RAPIDE DE L'ISOLATION
-- ============================================================================

SELECT '=== V√âRIFICATION RAPIDE DE L''ISOLATION ===' as section;

-- V√©rifier le workshop_id actuel
SELECT 
    'Workshop ID actuel' as info,
    value as workshop_id
FROM system_settings 
WHERE key = 'workshop_id';

-- V√©rifier combien de clients sont visibles
SELECT 
    'Clients visibles' as info,
    COUNT(*) as total_clients,
    COUNT(CASE WHEN loyalty_points > 0 THEN 1 END) as clients_with_points
FROM clients;

-- V√©rifier les clients avec des points de fid√©lit√©
SELECT 
    'Clients avec points de fid√©lit√©' as info,
    id as client_id,
    first_name,
    last_name,
    loyalty_points,
    workshop_id
FROM clients 
WHERE loyalty_points > 0
ORDER BY loyalty_points DESC
LIMIT 5;

-- ============================================================================
-- 2. V√âRIFICATION DE LA VUE LOYALTY_DASHBOARD
-- ============================================================================

SELECT '=== V√âRIFICATION DE LA VUE LOYALTY_DASHBOARD ===' as section;

-- V√©rifier combien de clients sont dans le dashboard
SELECT 
    'Clients dans le dashboard' as info,
    COUNT(*) as total_clients_in_dashboard
FROM loyalty_dashboard;

-- Afficher les clients dans le dashboard
SELECT 
    'D√©tail des clients dans le dashboard' as info,
    client_id,
    first_name,
    last_name,
    current_points,
    current_tier
FROM loyalty_dashboard
ORDER BY current_points DESC
LIMIT 10;

-- ============================================================================
-- 3. V√âRIFICATION DES POLITIQUES RLS
-- ============================================================================

SELECT '=== V√âRIFICATION DES POLITIQUES RLS ===' as section;

-- V√©rifier que RLS est activ√©
SELECT 
    'Activation RLS' as info,
    tablename,
    CASE WHEN rowsecurity THEN '‚úÖ Activ√©' ELSE '‚ùå D√©sactiv√©' END as rls_status
FROM pg_tables 
WHERE schemaname = 'public' 
    AND tablename IN ('clients', 'loyalty_config', 'loyalty_tiers_advanced', 'loyalty_points_history')
ORDER BY tablename;

-- V√©rifier les politiques RLS
SELECT 
    'Politiques RLS' as info,
    tablename,
    policyname,
    cmd
FROM pg_policies 
WHERE schemaname = 'public' 
    AND tablename IN ('clients', 'loyalty_config', 'loyalty_tiers_advanced', 'loyalty_points_history')
ORDER BY tablename, cmd;

-- ============================================================================
-- 4. TEST D'ISOLATION
-- ============================================================================

SELECT '=== TEST D''ISOLATION ===' as section;

-- Test 1: V√©rifier que tous les clients visibles ont le bon workshop_id
SELECT 
    'Test 1: Workshop ID des clients visibles' as test,
    COUNT(*) as total_clients,
    COUNT(CASE WHEN workshop_id = (SELECT value::UUID FROM system_settings WHERE key = 'workshop_id' LIMIT 1) THEN 1 END) as clients_with_correct_workshop,
    CASE 
        WHEN COUNT(*) = COUNT(CASE WHEN workshop_id = (SELECT value::UUID FROM system_settings WHERE key = 'workshop_id' LIMIT 1) THEN 1 END) 
        THEN '‚úÖ SUCC√àS: Tous les clients ont le bon workshop_id'
        ELSE '‚ùå √âCHEC: Certains clients ont un mauvais workshop_id'
    END as result
FROM clients;

-- Test 2: V√©rifier que la vue ne montre que les clients de l'atelier actuel
SELECT 
    'Test 2: Isolation de la vue' as test,
    COUNT(*) as clients_in_dashboard,
    CASE 
        WHEN COUNT(*) >= 0 THEN '‚úÖ SUCC√àS: Vue fonctionnelle'
        ELSE '‚ùå √âCHEC: Probl√®me avec la vue'
    END as result
FROM loyalty_dashboard;

-- Test 3: V√©rifier qu'il n'y a pas de clients d'autres ateliers
SELECT 
    'Test 3: Absence de clients d''autres ateliers' as test,
    COUNT(*) as clients_from_other_workshops,
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ SUCC√àS: Aucun client d''autre atelier'
        ELSE '‚ùå √âCHEC: Clients d''autres ateliers d√©tect√©s'
    END as result
FROM clients 
WHERE workshop_id IS NOT NULL 
    AND workshop_id != (SELECT value::UUID FROM system_settings WHERE key = 'workshop_id' LIMIT 1)
    AND workshop_id != '00000000-0000-0000-0000-000000000000'::UUID;

-- ============================================================================
-- 5. R√âSUM√â FINAL
-- ============================================================================

SELECT '=== R√âSUM√â FINAL ===' as section;

-- R√©sum√© de l'isolation
SELECT 
    'R√©sum√© de l''isolation' as info,
    (SELECT COUNT(*) FROM clients) as total_clients_visible,
    (SELECT COUNT(*) FROM clients WHERE loyalty_points > 0) as clients_with_points,
    (SELECT COUNT(*) FROM loyalty_dashboard) as clients_in_dashboard,
    CASE 
        WHEN (SELECT COUNT(*) FROM clients) > 0 
        AND (SELECT COUNT(*) FROM clients WHERE workshop_id != (SELECT value::UUID FROM system_settings WHERE key = 'workshop_id' LIMIT 1)) = 0
        THEN '‚úÖ ISOLATION FONCTIONNELLE'
        ELSE '‚ùå PROBL√àME D''ISOLATION D√âTECT√â'
    END as isolation_status;

-- Message final
SELECT 
    CASE 
        WHEN (SELECT COUNT(*) FROM clients WHERE workshop_id != (SELECT value::UUID FROM system_settings WHERE key = 'workshop_id' LIMIT 1)) = 0
        THEN 'üéâ L''isolation des donn√©es de fid√©lit√© fonctionne correctement !'
        ELSE '‚ö†Ô∏è Des probl√®mes d''isolation persistent. Ex√©cutez le script de correction avanc√©e.'
    END as final_message;
