// Script de test pour v√©rifier les donn√©es de r√©duction dans les r√©parations
console.log('üîç V√©rification des donn√©es de r√©duction dans les r√©parations...');

// Attendre que l'application soit charg√©e
setTimeout(async () => {
  try {
    if (typeof window !== 'undefined' && window.repairService) {
      console.log('‚úÖ repairService disponible');
      
      // R√©cup√©rer toutes les r√©parations
      const result = await window.repairService.getAll();
      
      if (result.success && result.data) {
        console.log(`üìä Nombre total de r√©parations: ${result.data.length}`);
        
        // Filtrer les r√©parations avec r√©duction
        const reparationsAvecReduction = result.data.filter(repair => 
          repair.discountPercentage && repair.discountPercentage > 0
        );
        
        console.log(`üéØ R√©parations avec r√©duction: ${reparationsAvecReduction.length}`);
        
        // Afficher les d√©tails des r√©parations avec r√©duction
        reparationsAvecReduction.forEach((repair, index) => {
          console.log(`\nüîß R√©paration ${index + 1}:`);
          console.log(`   ID: ${repair.id}`);
          console.log(`   Prix total: ${repair.totalPrice} ‚Ç¨`);
          console.log(`   Prix original: ${repair.originalPrice || 'Non d√©fini'} ‚Ç¨`);
          console.log(`   R√©duction: ${repair.discountPercentage}%`);
          console.log(`   Montant r√©duction: ${repair.discountAmount || 'Non d√©fini'} ‚Ç¨`);
          console.log(`   Statut: ${repair.status}`);
        });
        
        // Tester la r√©cup√©ration d'une r√©paration sp√©cifique
        if (reparationsAvecReduction.length > 0) {
          const premiereReparation = reparationsAvecReduction[0];
          console.log(`\nüß™ Test de r√©cup√©ration de la r√©paration ${premiereReparation.id}...`);
          
          const detailResult = await window.repairService.getById(premiereReparation.id);
          
          if (detailResult.success && detailResult.data) {
            console.log('‚úÖ R√©cup√©ration r√©ussie:');
            console.log(`   Prix total: ${detailResult.data.totalPrice} ‚Ç¨`);
            console.log(`   Prix original: ${detailResult.data.originalPrice || 'Non d√©fini'} ‚Ç¨`);
            console.log(`   R√©duction: ${detailResult.data.discountPercentage}%`);
            console.log(`   Montant r√©duction: ${detailResult.data.discountAmount || 'Non d√©fini'} ‚Ç¨`);
          } else {
            console.error('‚ùå Erreur lors de la r√©cup√©ration:', detailResult.error);
          }
        }
        
      } else {
        console.error('‚ùå Erreur lors de la r√©cup√©ration des r√©parations:', result.error);
      }
    } else {
      console.error('‚ùå repairService non disponible');
    }
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}, 2000);
